# Enable colors and change prompt:
autoload -U colors && colors	# Load colors

# Enable history
HISTFILE="$HOME/.zsh_history"
HISTSIZE=5000                    # Maximum events for internal history
SAVEHIST=5000                    # Maximum events in history file

setopt appendhistory             # Append rather than overwrite
setopt share_history             # Share history between all sessions.
setopt hist_ignore_space         # Do not record an event starting with a space.
setopt hist_expire_dups_first    # Expire a duplicate event first when trimming history.
setopt hist_ignore_dups          # Do not record an event that was just recorded again.
setopt hist_ignore_all_dups      # Delete an old recorded event if a new event is a duplicate.
setopt hist_find_no_dups         # Do not display a previously found event.
setopt hist_save_no_dups         # Do not write a duplicate event to the history file.
setopt hist_verify               # Do not execute immediately upon history expansion.

# Configure completions
zstyle ':completion:*' menu no                              # Disable zsh complete menus (because plugin handles them)
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'   # Case insensitive completion
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"     # Color the completions
# _comp_options+=(globdots)       # Complete hidden(dot)files

# Configure fzf-tab completions
zstyle ':fzf-tab:*' fzf-bindings 'tab:accept' # Use tab as enter instead of going down the list
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath' # Use fzf tab for cd completions

# Initialize completion system
autoload -Uz compinit && compinit

# enable and configure vi mode
bindkey -v
export KEYTIMEOUT=1

bindkey '^H' backward-delete-char  # For ^H to work globally
bindkey '^?' backward-delete-char  # For ^? to work globally

# Use vim keys in tab complete menu (currently not needed because fzf is used)
# bindkey -M menuselect 'h' vi-backward-char
# bindkey -M menuselect 'k' vi-up-line-or-history
# bindkey -M menuselect 'l' vi-forward-char
# bindkey -M menuselect 'j' vi-down-line-or-history

# Change cursor shape for different vi modes.
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[5 q';; # beam
    esac
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# Allow editing cli in nvim
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line # CTRL-E to edit cli prompt in NVIM

# sesh keybinding
function sesh-sessions() {
  {
    exec </dev/tty
    exec <&1
    local session
    session=$(sesh list -t -c | fzf --height 40% --reverse --border-label ' sesh ' --border --prompt 'âš¡  ')
    zle reset-prompt > /dev/null 2>&1 || true
    [[ -z "$session" ]] && return
    sesh connect $session
  }
}
zle     -N            sesh-sessions
bindkey -M emacs '^k' sesh-sessions
bindkey -M vicmd '^k' sesh-sessions
bindkey -M viins '^k' sesh-sessions

# load modules
source "$HOME/.config/shell/aliases.sh"
source "$HOME/.config/shell/exports.sh"

# Install plugin manager (zinit)
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

# add zsh plugins
zinit light Aloxaf/fzf-tab
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions
zinit cdreplay -q # apparently speeds completions loading up

# load programs
eval "$(fzf --zsh)"
eval "$(zoxide init zsh)"
eval "$(starship init zsh)"
